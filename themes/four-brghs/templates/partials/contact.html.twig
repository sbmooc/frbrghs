<section>

<a href="https://twitter.com/four_boroughs?lang=en">Twitter </a>|<a href="https://www.instagram.com/four_boroughs/?hl=en"> Instagram </a>| <a href="https://en-gb.facebook.com/fourboroughs/"> Facebook </a>
<h1> Get in touch </h1>

<div id="contactBox">

{% if form is null %}
    {% set form = grav.session.getFlashObject('form') %}
{% endif  %}

{% include 'partials/form-messages.html.twig' %}

{% set scope = scope ?: 'data.' %}
{% set multipart = '' %}
{% set method = form.method|upper|default('POST') %}
{% set client_side_validation = form.client_side_validation is not null ? form.client_side_validation : config.plugins.form.client_side_validation|default(true) %}
{% set inline_errors = form.inline_errors is not null ? form.inline_errors : config.plugins.form.inline_errors(false) %}

{% for field in form.fields %}
    {% if (method == 'POST' and field.type == 'file') %}
        {% set multipart = ' enctype="multipart/form-data"' %}
    {% endif %}
{% endfor %}

{% set action = form.action ? base_url ~ form.action : base_url ~ page.route ~ uri.params %}

{% if (action == base_url_relative) %}
    {% set action = base_url_relative ~ '/' ~ page.slug %}
{% endif %}
<div>
<p>{{pages.find('/details').header.times}}</p>
<p>{{pages.find('/details').header.address1}}</p>
<p>{{pages.find('/details').header.address2}}</p>
<p>{{pages.find('/details').header.email}}</p>
<p>{{pages.find('/details').header.telephone}}</p>
<form name="{{ form.name }}"
      action="{{ action | trim('/', 'right') }}"
      method="{{ method }}"{{ multipart }}
      {% if form.id %}id="{{ form.id }}"{% endif %}
      {% block form_classes %}
      class="{{ form_outer_classes }} {{ form.classes }}pure-form pure-form-stacked"
      {% endblock %}
      {% if form.novalidate %}novalidate{% endif %}
>

  {% block inner_markup_fields_start %}{% endblock %}

  {% for field in form.fields %}
    {% if field.type == 'file' %}
        {% do assets.addJs('plugin://form/assets/form.min.js') %}
    {% endif %}
    {% set value = form.value(field.name) %}
    {% include "forms/fields/#{field.type}/#{field.type}.html.twig" ignore missing %}
  {% endfor %}

  {% include "forms/fields/formname/formname.html.twig" %}

  {% block inner_markup_fields_end %}{% endblock %}

  {% block inner_markup_buttons_start %}
  <div class="{{ form_button_outer_classes ?: 'buttons'}}">
  {% endblock %}

  {% for button in form.buttons %}
      {% if button.outerclasses is defined %}<div class=" {{ button.outerclasses }}">{% endif %}
          {% if button.url %}
              <a href="{{ button.url starts with 'http' ? button.url : url(button.url) }}">
          {% endif %}
          <button
                {% if button.id %}id="{{ button.id }}"{% endif %}
                {% block button_classes %}
                class="{{ form_button_classes ?: 'button' }} {{ button.classes }} pure-button pure-button-primary"
                {% endblock %}
                {% if button.disabled %}disabled="disabled"{% endif %}

                type="{{ button.type|default('submit') }}"

                {% if button.task %}
                    name="task" value="{{ button.task }}"
                {% endif %}
            >
                {{ button.value|t|default('Submit') }}
          </button>
          {% if button.url %}
              </a>
          {% endif %}
      {% if button.outerclasses is defined %}</div>{% endif %}
  {% endfor %}

  {% block inner_markup_buttons_end %}
  </div>
  {% endblock %}

  {% include 'forms/fields/uniqueid/uniqueid.html.twig' %}
  {{ nonce_field('form', 'form-nonce')|raw }}
</form>
</div>
<div id="map">
</div>
</div>

<script>
mapboxgl.accessToken = "pk.eyJ1Ijoic2Jtb29jIiwiYSI6ImNqZ3FoZm9meDJ2djEyd3M3ODMzZnBoajIifQ.oBxXKbFVFVMEt4otPEG1CA";

/* Map: This represents the map on the page. */
var map = new mapboxgl.Map({
container: "map",
style: "mapbox://styles/mapbox/streets-v10",
zoom:15.0,
center: [-0.08126,51.41961]
});

map.on("load", function () {
/* Image: An image is loaded and added to the map. */
map.loadImage("user/images/googleMapsLogo.png", function(error, image) {
    if (error) throw error;
    map.addImage("custom-marker", image);
    /* Style layer: A style layer ties together the source and image and specifies how they are displayed on the map. */
    map.addLayer({
      id: "markers",
      type: "symbol",
      /* Source: A data source specifies the geographic coordinate where the image marker gets placed. */
      source: {
        type: "geojson",
        data: {
          type: "FeatureCollection",
          features:[{"type":"Feature","geometry":{"type":"Point","coordinates":[-0.07901084446856999,51.41970366875225]}}]}
      },
      layout: {
        "icon-image": "custom-marker",
      }
    });
  });
});
</script>

</section>
